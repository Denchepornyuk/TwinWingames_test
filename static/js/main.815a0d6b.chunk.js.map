{"version":3,"sources":["Components/Drums.js","Components/Spin.js","App.js","index.js"],"names":["Drums","_ref","slidesPerScroll","images","speed","carouselSettings","slidesPerPage","animationSpeed","infinite","draggable","addArrowClickHandler","arrowLeft","react_default","a","createElement","className","type","react_carousel_default","Object","assign","map","img","src","concat","alt","Spin","handleStart","onClick","App","_useState","useState","_useState2","slicedToArray","scroll","setScroll","_useState3","_useState4","randOrder","setRandOrder","_useState5","_useState6","isClicking","setIsClicking","useEffect","randNumbers","imagesNumber","randomOrder","order","i","temp","length","randNumber","Math","floor","random","includes","push","count","min","max","Array","fill","drum","index","Components_Drums","drumsNumber","Components_Spin","buttons","document","querySelectorAll","forEach","item","click","setTimeout","ReactDOM","render","src_App","getElementById"],"mappings":"wLA0CeA,EAtCD,SAAAC,GAAwC,IAArCC,EAAqCD,EAArCC,gBAAiBC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,MAClCC,EAAmB,CACvBC,cAAe,EACfC,eAAgB,IAChBC,UAAU,EACVC,WAAW,EACXC,sBAAsB,EACtBC,UAAYC,EAAAC,EAAAC,cAAA,UACVC,UAAU,iBACVC,KAAK,YAKT,OACEJ,EAAAC,EAAAC,cAACG,EAAAJ,EAADK,OAAAC,OAAA,CACEJ,UAAU,WACVb,gBAAiBA,GACbG,EAHN,CAIEE,eAAgBH,IAEfD,EAAOiB,IAAI,SAAAC,GAAG,OACbT,EAAAC,EAAAC,cAAA,OACEQ,IAAG,cAAAC,OAAgBF,EAAhB,QACHG,IAAKH,EACLN,UAAU,cCdLU,EAZF,SAAAxB,GAAA,IAAGyB,EAAHzB,EAAGyB,YAAH,OACXd,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVC,KAAK,SACLW,QAASD,GAHX,SC6FaE,EA3FH,WACV,IADgBC,EAIYC,mBAAS,IAJrBC,EAAAb,OAAAc,EAAA,EAAAd,CAAAW,EAAA,GAITI,EAJSF,EAAA,GAIDG,EAJCH,EAAA,GAAAI,EAKkBL,mBAAS,IAL3BM,EAAAlB,OAAAc,EAAA,EAAAd,CAAAiB,EAAA,GAKTE,EALSD,EAAA,GAKEE,EALFF,EAAA,GAAAG,EAMoBT,oBAAS,GAN7BU,EAAAtB,OAAAc,EAAA,EAAAd,CAAAqB,EAAA,GAMTE,EANSD,EAAA,GAMGE,EANHF,EAAA,GAQhBG,oBAAU,kBACRT,EAAU,kBACRU,EATiB,GAWfC,IACAA,OAEC,IAEPF,oBAAU,kBACRL,EAAaQ,MACZ,IAEH,IAAMA,EAAc,WAGlB,IAFA,IAAMC,EAAQ,GAELC,EAAI,EAAGA,EAtBE,EAsBeA,GAAK,EAAG,CAGvC,IAFA,IAAMC,EAAO,GAxBI,KA0BVA,EAAKC,QAAyB,CACnC,IAAMC,EAAaC,KAAKC,MAAM,EA3Bf,GA2BmBD,KAAKE,UAElCL,EAAKM,SAASJ,IACjBF,EAAKO,KAAKL,GAIdJ,EAAMS,KAAKP,GAGb,OAAOF,GAGHH,EAAc,SAACa,EAAOC,EAAKC,GAAb,OAClBC,MAAMH,GAAOI,KAAK,IAAIzC,IAAI,kBACxBgC,KAAKC,MAAMK,EAAMN,KAAKE,UAAYK,EAAM,OAoB5C,OACE/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZsB,EAAUjB,IAAI,SAAC0C,EAAMC,GAAP,OACbnD,EAAAC,EAAAC,cAACkD,EAAD,CACE9D,gBAAiB+B,EAAO8B,GACxB5D,OAAQ2D,EACR1D,MAAO6D,IAA6B,IAARF,OAKjCtB,EAEG7B,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLD,UAAU,oBAFZ,QAOAH,EAAAC,EAAAC,cAACoD,EAAD,CAAMxC,YAtCM,WAClBgB,GAAc,GACd,IAAMyB,EAAUC,SAASC,iBAAiB,mBAE1CnC,EAAU,kBAAMU,EAlDG,GAoDjBC,IACAA,MAEFsB,EAAQG,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,UAE7BC,WAAW,WACT/B,GAAc,IACb,UC7DPgC,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAASR,SAASS,eAAe","file":"static/js/main.815a0d6b.chunk.js","sourcesContent":["import React from 'react';\nimport Carousel from '@brainhubeu/react-carousel';\nimport PropTypes from 'prop-types';\n\nconst Drums = ({ slidesPerScroll, images, speed }) => {\n  const carouselSettings = {\n    slidesPerPage: 3,\n    animationSpeed: 1000,\n    infinite: true,\n    draggable: false,\n    addArrowClickHandler: true,\n    arrowLeft: (<button\n      className=\"slider__button\"\n      type=\"button\"\n    />\n    ),\n  };\n\n  return (\n    <Carousel\n      className=\"carousel\"\n      slidesPerScroll={slidesPerScroll}\n      {...carouselSettings}\n      animationSpeed={speed}\n    >\n      {images.map(img => (\n        <img\n          src={`images/img_${img}.jpg`}\n          alt={img}\n          className=\"photo\"\n        />\n      ))}\n    </Carousel>\n  );\n};\n\nDrums.propTypes = {\n  slidesPerScroll: PropTypes.number.isRequired,\n  images: PropTypes.number.isRequired,\n  speed: PropTypes.number.isRequired,\n};\n\nexport default Drums;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Spin = ({ handleStart }) => (\n  <button\n    className=\"drum__button\"\n    type=\"button\"\n    onClick={handleStart}\n  >\n    Spin\n  </button>\n);\n\nSpin.propTypes = { handleStart: PropTypes.func.isRequired };\n\nexport default Spin;\n","import React, { useState, useEffect } from 'react';\nimport './style.scss';\n\nimport Drums from './Components/Drums';\nimport Spin from './Components/Spin';\n\nconst App = () => {\n  const imagesNumber = 13;\n  const drumsNumber = 5;\n\n  const [scroll, setScroll] = useState([]);\n  const [randOrder, setRandOrder] = useState([]);\n  const [isClicking, setIsClicking] = useState(false);\n\n  useEffect(() => (\n    setScroll(() => (\n      randNumbers(\n        imagesNumber,\n        imagesNumber / 2,\n        imagesNumber * 2\n      )\n    ))), []);\n\n  useEffect(() => (\n    setRandOrder(randomOrder())\n  ), []);\n\n  const randomOrder = () => {\n    const order = [];\n\n    for (let i = 0; i < drumsNumber; i += 1) {\n      const temp = [];\n\n      while (temp.length !== imagesNumber) {\n        const randNumber = Math.floor(1 + Math.random() * imagesNumber);\n\n        if (!temp.includes(randNumber)) {\n          temp.push(randNumber);\n        }\n      }\n\n      order.push(temp);\n    }\n\n    return order;\n  };\n\n  const randNumbers = (count, min, max) => (\n    Array(count).fill('').map(() => (\n      Math.floor(min + Math.random() * (max + 1))\n    ))\n  );\n\n  const handleStart = () => {\n    setIsClicking(true);\n    const buttons = document.querySelectorAll('.slider__button');\n\n    setScroll(() => randNumbers(\n      imagesNumber,\n      imagesNumber / 2,\n      imagesNumber * 2\n    ));\n    buttons.forEach(item => item.click());\n\n    setTimeout(() => {\n      setIsClicking(false);\n    }, 5000);\n  };\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"carousels\">\n        {randOrder.map((drum, index) => (\n          <Drums\n            slidesPerScroll={scroll[index]}\n            images={drum}\n            speed={drumsNumber * 1000 - index * 1000}\n          />\n        ))}\n      </div>\n\n      {isClicking\n        ? (\n          <button\n            type=\"button\"\n            className=\"button--clicking\"\n          >\n            Spin\n          </button>\n        )\n        : <Spin handleStart={handleStart} />\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}